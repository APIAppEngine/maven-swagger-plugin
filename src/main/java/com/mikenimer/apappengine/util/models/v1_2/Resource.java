package com.mikenimer.apappengine.util.models.v1_2;

import org.apache.maven.plugins.annotations.Parameter;

import java.util.List;

/**
 * @see https://github.com/wordnik/swagger-spec/blob/master/versions/1.2.md#512-resource-object
 * Created by mnimer on 8/28/14.
 */
public class Resource
{
    //swagger spec
    /**
     * Name of the resource, will be used to generate path to definition
     */
    @Parameter
    private transient String name;

    @Parameter
    private String path;

    //swagger spec
    /**
     * Recommended. A short description of the resource.
     */
    @Parameter(required = false)
    private String description;

    //swagger spec
    //passed through to API
    /**
     * Required. The root URL serving the API. This field is important because while it is common to have the Resource Listing and API Declarations on the server providing the APIs themselves, it is not a requirement. The API specifications can be served using static files and not generated by the API server itself, so the URL for serving the API cannot always be derived from the URL serving the API specification. The value SHOULD be in the format of a URL.
     */
    private transient String basePath;

    //List of java packages to search in
    @Parameter
    private transient List<String> basePackage;


    /**
     * special method that will return the name property as url safe name with a .json extension.
     * @return
     */
    public String getPath()
    {
        return path;
    }


    public void setPath(String path)
    {
        this.path = path;
    }


    public String getName()
    {
        return name;
    }


    public void setName(String name)
    {
        this.name = name;
        this.setPath(name.replaceAll(" ", "_") +".json");
    }


    public String getDescription()
    {
        return description;
    }


    public void setDescription(String description)
    {
        this.description = description;
    }


    public String getBasePath()
    {
        return basePath;
    }


    public void setBasePath(String basePath)
    {
        this.basePath = basePath;
    }


    public List<String> getBasePackage()
    {
        return basePackage;
    }


    public void setBasePackage(List<String> basePackage)
    {
        this.basePackage = basePackage;
    }
}
